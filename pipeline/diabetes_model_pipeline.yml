trigger:
  - none
jobs:
- job: myJob
  timeoutInMinutes: 1000
  variables:
  - template: var-dev.yml
  pool:
    vmImage: 'ubuntu latest'
  # strategy:
  #   matrix:
  #     Python39:
  #       python.version: '3.9'

  steps:
 # Template reference
  - script: | 
     sudo apt install python3.9
  # - task: UsePythonVersion@0
  #   inputs:
  #     versionSpec: $(python.version)
  #     addToPath: true
  #     #architecture: 'x64'
  - task: AzureCLI@2
    displayName: 'Install AML CLI'
    inputs:
      azureSubscription: ${{ variables.ml_ws_connection }}
      scriptLocation: inlineScript
      scriptType: 'bash'
      inlineScript: 'az extension add -n azure-cli-ml'

  - task: Bash@3
    displayName: 'Create metadata directory'
    inputs:
      targetType: 'inline'
      script: 'mkdir metadata'

  - task: AzureCLI@2
    displayName: 'Attach folder to workspace'
    inputs:
      azureSubscription: ${{ variables.ml_ws_connection }}
      workingDirectory: ${{ variables.ml_path }}
      scriptLocation: inlineScript
      scriptType: 'bash'
      inlineScript: 'az ml folder attach -w ${{ variables.ml_ws }} -g ${{ variables.ml_rg }} -t metadata/folder.json'

  - task: AzureCLI@2
    displayName: 'Create compute for training'
    inputs:
      azureSubscription: ${{ variables.ml_ws_connection }}
      workingDirectory: ${{ variables.ml_path }}
      scriptLocation: inlineScript
      scriptType: 'bash'
      inlineScript: 'az ml computetarget create amlcompute -n ${{ variables.ml_ct }} --vm-size STANDARD_D2_V2 --max-nodes 1'
    
  - task: AzureCLI@2
    retryCountOnTaskFailure: 5 #default is zero
    timeoutInMinutes: 1000 # default is 60 mins 
    displayName: 'Train model'
    inputs:
      azureSubscription: ${{ variables.ml_ws_connection }}
      workingDirectory: ${{ variables.ml_path }}
      scriptLocation: inlineScript
      scriptType: 'bash'
      inlineScript: 'az ml run submit-script -c training/train --ct ${{ variables.ml_ct }} -e ${{ variables.ml_exp }} -t metadata/run.json training/train_diabetes.py'

  # Add potential approval step before registration of model

  - task: AzureCLI@2
    displayName: 'Register model'
    inputs:
      azureSubscription: ${{ variables.ml_ws_connection }}
      workingDirectory: ${{ variables.ml_path  }}
      scriptLocation: inlineScript
      scriptType: 'bash'
      inlineScript: 'az ml model register -n ${{ variables.ml_model_name }} -f metadata/run.json --asset-path outputs/ridge_0.95.pkl -t metadata/model.json'
  - task: AzureCLI@2
    timeoutInMinutes: 1000
    displayName: 'Deploy model to AKS for Production'
    inputs:
      azureSubscription: ${{ variables.ml_ws_connection }}
      workingDirectory: ${{ variables.ml_path }}
      scriptLocation: inlineScript
      scriptType: 'bash'
      inlineScript: 'az ml model deploy --name diabetes-preprod-aks --ct ${{ variables.ml_aks_name }} -m diabetes_model_mlops:1 --ic deployment/inferenceConfig.yml --dc deployment/aksDeploymentConfig.yml  --overwrite'
